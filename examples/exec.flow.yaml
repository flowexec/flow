# yaml-language-server: $schema=https://flowexec.io/schemas/flowfile_schema.json
# DO NOT EDIT - this file was generated by the example builder tool
description: This is a flow executable that demonstrates how to use exec executable types.
executables:
  - description: When the `name` field is not set, the executable can be run with just the verb.
    exec:
      cmd: echo 'hello from nameless'
    tags:
      - exec
    verb: run
    visibility: private
  - exec:
      cmd: echo 'hello from simple-print'
    name: simple-print
    tags:
      - exec
    verb: run
    visibility: private
  - exec:
      file: simple-script.sh
    name: simple-file
    tags:
      - exec
    verb: run
    visibility: private
  - exec:
      cmd: echo 'hello from with-pauses'; sleep 1; echo 'hello from with-pauses'; sleep 1; echo 'hello from with-pauses'
    name: with-pauses
    tags:
      - exec
    verb: run
    visibility: private
  - exec:
      cmd: exit 1
    name: with-exit
    tags:
      - exec
    verb: run
    visibility: private
  - description: |-
      Executables will be run from a new temporary direction when the `dir` field is set to `f:tmp`.
      If the executable is a parallel or serial executable, all sub-executables will run from the same temporary directory.
      Any files created during the execution will be deleted after the executable completes.
    exec:
      cmd: echo 'hello from with-tmp-dir';mkdir with-tmp-dir; cd with-tmp-dir; pwd
      dir: f:tmp
    name: with-tmp-dir
    tags:
      - exec
    verb: run
    visibility: private
  - description: |-
      Command line arguments can be passed to the executable using the `args` field.
      Arguments can be positional or flags, and can have default values.
      **You must specify the `envKey` field for each argument and one of `pos` or `flag`** The value of the argument will be available in the environment variable specified by `envKey`.
      The first positional argument is at position 1 and following arguments are at increasing positions. Flags are specified with the defined flag value and is followed by `=` and it's value (no spaces).
      If a default value is provided, it will be used if the argument is not provided. The executable will fail if a required argument is not provided.
    exec:
      args:
        - envKey: ARG1
          pos: 1
        - default: yz
          envKey: ARG2
          flag: x
      cmd: echo 'hello from with-args'; echo 'pos=1, key=ARG1'; echo 'flag=x, key=ARG2'
    name: with-args
    tags:
      - exec
    verb: run
    visibility: private
  - description: |-
      Parameters can be passed to the executable using the `params` field.
      Parameters can be text, secrets, or prompts. Text parameters will be available in the environment variable specified by `envKey`. Secret parameters will be resolved from the secret store and will be available in the environment variable specified by `envKey`. Prompt parameters will prompt the user for a value and will be available in the environment variable specified by `envKey`.
    exec:
      cmd: echo 'hello from with-params'; echo 'key=PARAM1, value=value1'; echo 'key=PARAM2, secret=flow-example-secret';
        echo 'key=PARAM3, prompt=Enter a value', value=$PARAM3
      params:
        - envKey: PARAM1
          text: value1
        - envKey: PARAM2
          secretRef: flow-example-secret
        - envKey: PARAM3
          prompt: Enter a value
    name: with-params
    tags:
      - exec
    verb: run
    visibility: private
  - description: |-
      The `logMode` field can be set to change the formatting of the executable's output logs.
      Valid values are `logfmt`, `text`, `json`, and `hidden`. The default value is determined by the user's configuration.
    exec:
      cmd: echo 'hello from with-plaintext'; echo 'line 2'; echo 'line 3'; echo 'line 4'
      logMode: text
    name: with-plaintext
    tags:
      - exec
    verb: run
    visibility: private
  - description: |-
      The `timeout` field can be set to limit the amount of time the executable will run.
      If the executable runs longer than the timeout, it will be killed and the execution will fail.
    exec:
      cmd: sleep 13
    name: with-timeout
    tags:
      - exec
    timeout: 3s
    verb: run
    visibility: private
  - exec:
      cmd: |-
        echo "Enter your name:"
        read name
        echo "Hello, $name!"
    name: with-input
    tags:
      - exec
    verb: run
    visibility: private
  - exec:
      cmd: |-
        echo "Opening vim..."
        vim
        echo "Vim closed."
    name: with-vim
    tags:
      - exec
    verb: run
    visibility: hidden
fromFile:
  - generated.sh
namespace: examples
tags:
  - exec
visibility: private
