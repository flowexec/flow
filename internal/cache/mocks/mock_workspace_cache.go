// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/flowexec/flow/internal/cache (interfaces: WorkspaceCache)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_workspace_cache.go -package=mocks github.com/flowexec/flow/internal/cache WorkspaceCache
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	cache "github.com/flowexec/flow/internal/cache"
	workspace "github.com/flowexec/flow/types/workspace"
	gomock "go.uber.org/mock/gomock"
)

// MockWorkspaceCache is a mock of WorkspaceCache interface.
type MockWorkspaceCache struct {
	ctrl     *gomock.Controller
	recorder *MockWorkspaceCacheMockRecorder
}

// MockWorkspaceCacheMockRecorder is the mock recorder for MockWorkspaceCache.
type MockWorkspaceCacheMockRecorder struct {
	mock *MockWorkspaceCache
}

// NewMockWorkspaceCache creates a new mock instance.
func NewMockWorkspaceCache(ctrl *gomock.Controller) *MockWorkspaceCache {
	mock := &MockWorkspaceCache{ctrl: ctrl}
	mock.recorder = &MockWorkspaceCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkspaceCache) EXPECT() *MockWorkspaceCacheMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockWorkspaceCache) GetData() *cache.WorkspaceCacheData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData")
	ret0, _ := ret[0].(*cache.WorkspaceCacheData)
	return ret0
}

// GetData indicates an expected call of GetData.
func (mr *MockWorkspaceCacheMockRecorder) GetData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockWorkspaceCache)(nil).GetData))
}

// GetLatestData mocks base method.
func (m *MockWorkspaceCache) GetLatestData() (*cache.WorkspaceCacheData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestData")
	ret0, _ := ret[0].(*cache.WorkspaceCacheData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestData indicates an expected call of GetLatestData.
func (mr *MockWorkspaceCacheMockRecorder) GetLatestData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestData", reflect.TypeOf((*MockWorkspaceCache)(nil).GetLatestData))
}

// GetWorkspaceConfigList mocks base method.
func (m *MockWorkspaceCache) GetWorkspaceConfigList() (workspace.WorkspaceList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkspaceConfigList")
	ret0, _ := ret[0].(workspace.WorkspaceList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkspaceConfigList indicates an expected call of GetWorkspaceConfigList.
func (mr *MockWorkspaceCacheMockRecorder) GetWorkspaceConfigList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkspaceConfigList", reflect.TypeOf((*MockWorkspaceCache)(nil).GetWorkspaceConfigList))
}

// Update mocks base method.
func (m *MockWorkspaceCache) Update() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update")
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockWorkspaceCacheMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockWorkspaceCache)(nil).Update))
}
