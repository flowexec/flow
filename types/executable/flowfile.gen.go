// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package executable

import "github.com/jahvon/flow/types/common"

// Configuration for a group of Flow CLI executables. The file must have the
// extension `.flow` in order to be discovered
// by the CLI. It's configuration is used to define a group of executables with
// shared metadata (namespace, tags, etc).
// A workspace can have multiple flow files located anywhere in the workspace
// directory
type FlowFile struct {
	// configPath corresponds to the JSON schema field "configPath".
	configPath string `json:"configPath,omitempty" yaml:"configPath,omitempty" mapstructure:"configPath,omitempty"`

	// A description of the executables defined within the flow file. This description
	// will be set as the executables'
	// description if not defined at the executable level.
	//
	Description string `json:"description,omitempty" yaml:"description,omitempty" mapstructure:"description,omitempty"`

	// Executables corresponds to the JSON schema field "executables".
	Executables FlowFileExecutables `json:"executables,omitempty" yaml:"executables,omitempty" mapstructure:"executables,omitempty"`

	// FromFiles corresponds to the JSON schema field "fromFiles".
	FromFiles FromFiles `json:"fromFiles,omitempty" yaml:"fromFiles,omitempty" mapstructure:"fromFiles,omitempty"`

	// The namespace to be given to all executables in the flow file.
	// If not set, the executables in the file will be grouped into the root (*)
	// namespace.
	// Namespaces can be reused across multiple flow files.
	//
	// Namespaces are used to reference executables in the CLI using the format
	// `workspace:namespace/name`.
	//
	Namespace string `json:"namespace,omitempty" yaml:"namespace,omitempty" mapstructure:"namespace,omitempty"`

	// Tags to be applied to all executables defined within the flow file.
	Tags []string `json:"tags,omitempty" yaml:"tags,omitempty" mapstructure:"tags,omitempty"`

	// Visibility corresponds to the JSON schema field "visibility".
	Visibility *FlowFileVisibility `json:"visibility,omitempty" yaml:"visibility,omitempty" mapstructure:"visibility,omitempty"`

	// workspace corresponds to the JSON schema field "workspaceName".
	workspace string `json:"workspaceName,omitempty" yaml:"workspaceName,omitempty" mapstructure:"workspaceName,omitempty"`

	// workspacePath corresponds to the JSON schema field "workspacePath".
	workspacePath string `json:"workspacePath,omitempty" yaml:"workspacePath,omitempty" mapstructure:"workspacePath,omitempty"`
}

type FlowFileExecutables ExecutableList

type FlowFileVisibility common.Visibility

// A list of `.sh` files to convert into generated executables in the file's
// executable group.
type FromFiles []string
