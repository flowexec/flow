// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package workspace

import "github.com/flowexec/flow/types/common"

type ExecutableFilter struct {
	// A list of directories to exclude from the executable search.
	Excluded []string `json:"excluded,omitempty" yaml:"excluded,omitempty" mapstructure:"excluded,omitempty"`

	// A list of directories to include in the executable search.
	Included []string `json:"included,omitempty" yaml:"included,omitempty" mapstructure:"included,omitempty"`
}

// Configuration for a workspace in the Flow CLI.
// This configuration is used to define the settings for a workspace.
// Every workspace has a workspace config file named `flow.yaml` in the root of the
// workspace directory.
type Workspace struct {
	// assignedName corresponds to the JSON schema field "assignedName".
	assignedName string `json:"assignedName,omitempty" yaml:"assignedName,omitempty" mapstructure:"assignedName,omitempty"`

	// A description of the workspace. This description is rendered as markdown in the
	// interactive UI.
	Description string `json:"description,omitempty" yaml:"description,omitempty" mapstructure:"description,omitempty"`

	// A path to a markdown file that contains the description of the workspace.
	DescriptionFile string `json:"descriptionFile,omitempty" yaml:"descriptionFile,omitempty" mapstructure:"descriptionFile,omitempty"`

	// The display name of the workspace. This is used in the interactive UI.
	DisplayName string `json:"displayName,omitempty" yaml:"displayName,omitempty" mapstructure:"displayName,omitempty"`

	// Executables corresponds to the JSON schema field "executables".
	Executables *ExecutableFilter `json:"executables,omitempty" yaml:"executables,omitempty" mapstructure:"executables,omitempty"`

	// location corresponds to the JSON schema field "location".
	location string `json:"location,omitempty" yaml:"location,omitempty" mapstructure:"location,omitempty"`

	// Tags corresponds to the JSON schema field "tags".
	Tags WorkspaceTags `json:"tags,omitempty" yaml:"tags,omitempty" mapstructure:"tags,omitempty"`

	// If true, the executables in the workspace can be referred to by their verb
	// aliases.
	// This allows you to use commands like `flow run` instead of `flow exec`.
	//
	VerbAliasEnabled *bool `json:"verbAliasEnabled,omitempty" yaml:"verbAliasEnabled,omitempty" mapstructure:"verbAliasEnabled,omitempty"`
}

type WorkspaceTags common.Tags
